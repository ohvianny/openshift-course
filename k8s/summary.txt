Kubernetes - k8s

https://kubernetes.io/docs/concepts/

Components
- API server: frontend, the users, command line (interact con el cluster k8s)
- etcd: key value, guarda todas la data del cluster. Guarda logs para que no haya conflicto entre los masters (framework)
- Scheduler: distribuir los container en los nodos, los asigna a los nodos
- Controllers: brain, esta atento de si esta corriendo o no los endpoints. Toma la decision
- Container runtime: docker 
- kubelet: agente que corre en el cluster, los containers esta corriendo en los nodos correctamente

Conceptos
- POD: es la unidad mas pequeña de k8s, un pod puede tener muchos containers corriendo y puede haber muchos PODS en un nodo de k8s. Reglas:
    - No puedes agregar mas containers a un POD, debes aumentar o disminuir los POD o los Nodos para escalar tu plataforma
    - Un POD no debería contener mas de un container con la misma imagen

YAML
- Dictionary: básicamente un objeto con sus descripciones
- List: listar una lista de strings
- List of dictionaries: una lista de objetos 


Replica Controllers & Replica Set
- La definición de replica es incluir PODs en otros nodos para balancear las cargas 
- Replica Controllers: es la version antigua para manejar replicas
- Replica Set: es la nueva forma recomendada de hacer replicas. Donde este tiene un selector para saber cuales son los PODs que están relacionados a el, y de haber PODs corriendo antes de correr el ReplicaSet este los tome en consideracion
    - Con Selector Puedes monitorear si los PODs estan corriendo y arreglar los Labels para identificar los PODs

Deployments
- Maneja el ciclo de vida de una aplicacion que sera instalada en ambientes
- Rollout: es lo primero que se ejecuta cuando se corre un deployment y se llama revision 1, cuando se vuelve
a ejecutar se llamara revision 2. Se creara una lista historica de revisiones
- Dos tipos de estrategias:
  - Recreate: primero se elimina las instancias y luego instala las nuevas. Tiene un problema y es que tiene 
  un tiempo donde la app esta abajo
  - Rolling update: estrategia por defecto. Esta estrategia consiste en eliminar una instancia y subir la nueva version, una por una, hasta que todo
  este actualizado. 

kubctl apply -> roll out

Services:
- Habilita la comunicacion entre distintas aplicaciones o usuarios, tambien entre distintos NODOS y PODS. Services Types:
    - NodePort: se encarga de disponibilizar en la red un puerto en especifico para ser mapeado a un POD.
        - TargetPort: es el puerto del POD a servir
        - Port: el puerto del servicio
        - NodePort: es el puerto del nodo. Range: 30000 - 32767
    - Cluster IP: una IP virtual dentro del cluster para disponibilizar comunicacion entre frontend, backend, redis, etc
        - Agrupa los PODs para que sea mas facil encontrar los servicios.
    - LoadBalancer: crea un balanceador para la aplicacion. Cambiar la propiedad de NodePort a LoadBalancer
- Este servicio puede estar fuera de los nodos, se aplica la regla para todos los PODs de los nodos
